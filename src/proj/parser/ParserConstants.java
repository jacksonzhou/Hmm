/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package proj.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int IFF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int WHILE = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int INT = 11;
  /** RegularExpression Id. */
  int FLOAT = 12;
  /** RegularExpression Id. */
  int BOOL = 13;
  /** RegularExpression Id. */
  int VOID = 14;
  /** RegularExpression Id. */
  int LIST = 15;
  /** RegularExpression Id. */
  int TUPLE = 16;
  /** RegularExpression Id. */
  int OBJECT = 17;
  /** RegularExpression Id. */
  int STRING = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int RETURN = 21;
  /** RegularExpression Id. */
  int AND_OP = 22;
  /** RegularExpression Id. */
  int OR_OP = 23;
  /** RegularExpression Id. */
  int LPAREN = 24;
  /** RegularExpression Id. */
  int RPAREN = 25;
  /** RegularExpression Id. */
  int LBRACE = 26;
  /** RegularExpression Id. */
  int RBRACE = 27;
  /** RegularExpression Id. */
  int LCURLY = 28;
  /** RegularExpression Id. */
  int RCURLY = 29;
  /** RegularExpression Id. */
  int SEMI = 30;
  /** RegularExpression Id. */
  int EQ_OP = 31;
  /** RegularExpression Id. */
  int NE_OP = 32;
  /** RegularExpression Id. */
  int LE_OP = 33;
  /** RegularExpression Id. */
  int GE_OP = 34;
  /** RegularExpression Id. */
  int ELEM = 35;
  /** RegularExpression Id. */
  int PIPE = 36;
  /** RegularExpression Id. */
  int EQUALS = 37;
  /** RegularExpression Id. */
  int LT_OP = 38;
  /** RegularExpression Id. */
  int GT_OP = 39;
  /** RegularExpression Id. */
  int MINUS = 40;
  /** RegularExpression Id. */
  int PLUS = 41;
  /** RegularExpression Id. */
  int MULT = 42;
  /** RegularExpression Id. */
  int DIV = 43;
  /** RegularExpression Id. */
  int PRCNT = 44;
  /** RegularExpression Id. */
  int BANG = 45;
  /** RegularExpression Id. */
  int COMMA = 46;
  /** RegularExpression Id. */
  int SQUOTE = 47;
  /** RegularExpression Id. */
  int DOT = 48;
  /** RegularExpression Id. */
  int LAMBDA = 49;
  /** RegularExpression Id. */
  int MAP_TO = 50;
  /** RegularExpression Id. */
  int CONNECT = 51;
  /** RegularExpression Id. */
  int MYCLASS = 52;
  /** RegularExpression Id. */
  int CREATEDATABASE = 53;
  /** RegularExpression Id. */
  int CREATE = 54;
  /** RegularExpression Id. */
  int INSERT = 55;
  /** RegularExpression Id. */
  int CLOSECONNECTION = 56;
  /** RegularExpression Id. */
  int DED = 57;
  /** RegularExpression Id. */
  int SIGN = 58;
  /** RegularExpression Id. */
  int SHOWSTACK = 59;
  /** RegularExpression Id. */
  int INTEGER = 60;
  /** RegularExpression Id. */
  int IDENTIFIER = 61;
  /** RegularExpression Id. */
  int CLFLOAT = 62;
  /** RegularExpression Id. */
  int CLSTRING = 63;
  /** RegularExpression Id. */
  int ERROR = 64;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"if\"",
    "\"iff\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"int\"",
    "\"float\"",
    "\"bool\"",
    "\"void\"",
    "\"list\"",
    "\"tuple\"",
    "\"object\"",
    "\"string\"",
    "\"true\"",
    "\"false\"",
    "\"return\"",
    "\"&&\"",
    "\"||\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"==\"",
    "\"!=\"",
    "\"<=\"",
    "\">=\"",
    "\"<-\"",
    "\"|\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"!\"",
    "\",\"",
    "\"\\\'\"",
    "\".\"",
    "\"(\\\\\"",
    "\"->\"",
    "\"Connect\"",
    "\"Class\"",
    "\"CreateDatabase\"",
    "\"create\"",
    "\"Insert\"",
    "\"CloseConnection\"",
    "\"DisplayEntireDatabase\"",
    "\"#\"",
    "\"showstack\"",
    "<INTEGER>",
    "<IDENTIFIER>",
    "<CLFLOAT>",
    "<CLSTRING>",
    "<ERROR>",
  };

}
